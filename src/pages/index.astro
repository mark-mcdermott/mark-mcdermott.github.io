---
import Layout from "../layouts/blogIndexLayout.astro";
import Link from "../components/link.astro";
import PostTitle from "../components/postTitle.astro";
import { getCollection, type CollectionEntry } from "astro:content";

import { unified } from "unified";
import remarkParse from "remark-parse";
import remarkRehype from "remark-rehype";
import rehypeStringify from "rehype-stringify";

const posts: CollectionEntry<"posts">[] = await getCollection(
  "posts",
  ({ data }) => !data.draft,
);

// newest first
posts.sort((a, b) =>
  Date.parse(a.data.date) < Date.parse(b.data.date) ? 1 : -1,
);

// precompute display data
const items = await Promise.all(
  posts.map(async (p) => {
    const cleanSlug = p.slug
      .split("/")
      .map((seg) => seg.replace(/^\d{4}-\d{2}-\d{2}-/, ""))
      .join("/");
    const processed = await unified()
      .use(remarkParse)
      .use(remarkRehype)
      .use(rehypeStringify)
      .process(p.data.spoiler ?? "");
    return {
      href: `/${cleanSlug}/`,
      date: p.data.date,
      title: p.data.title,
      spoilerHTML: String(processed),
    };
  }),
);
---

<Layout>
  <div class="relative -top-[10px] flex flex-col gap-8">
    {
      items.map((it) => (
        <Link
          classList={[
            "block scale-100 py-4 hover:scale-[1.005] active:scale-100",
          ]}
          target="_self"
          href={it.href}
        >
          <article>
            <p class="text-[13px] text-gray-700 dark:text-gray-300">
              {new Date(it.date).toLocaleDateString("en-US", {
                day: "2-digit",
                month: "2-digit",
                year: "numeric",
              })}
            </p>
            <PostTitle title={it.title} date={it.date} />
            <div class="mt-1" set:html={it.spoilerHTML} />
          </article>
        </Link>
      ))
    }
  </div>
</Layout>
