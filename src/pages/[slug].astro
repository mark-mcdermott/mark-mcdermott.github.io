---
import BlogLayout from "@/layouts/blogPostLayout.astro";
import "@/styles/markdown.css";
import { getCollection, type CollectionEntry } from "astro:content";
import { getPostWords, readTimeStr } from "@/utils/utils";
import "@fontsource/montserrat/900.css";
import fs from "node:fs";
import { unified } from "unified";
import remarkParse from "remark-parse";
import remarkRehype from "remark-rehype";
import rehypeStringify from "rehype-stringify";

export async function getStaticPaths() {
  const posts = await getCollection("posts", ({ data }) => !data.draft);
  return posts.map((p) => ({
    params: { slug: p.slug }, // âœ… use built-in slug
    props: { entry: p }, // pass the entry through
  }));
}

// hydrate the entry for this page
const entry: CollectionEntry<"posts"> = Astro.props.entry;
const { Content } = await entry.render();
const fm = entry.data;

// For read time, use entry.body (raw MD/MDX without frontmatter)
const source = entry.body ?? "";
const words = getPostWords(source);
const readTime = readTimeStr(words);

// Pre-process spoiler markdown -> HTML
const spoilerMarkdown = fm.spoiler ?? "";
const processed = await unified()
  .use(remarkParse)
  .use(remarkRehype)
  .use(rehypeStringify)
  .process(spoilerMarkdown);
const spoilerHTML = String(processed);

// Date string in your schema is "YYYY-MM-DD"; render it nicely
const prettyDate = new Date(fm.date).toLocaleDateString("en-US", {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
});
---

<BlogLayout>
  <article>
    <h1
      class="text-[40px] font-black leading-[44px] text-[--title] font-['Montserrat']"
    >
      {fm.title}
    </h1>

    <div
      class="mt-1 post-subtitle"
      style="color: var(--purple)"
      set:html={spoilerHTML}
    />

    <p class="mb-6 mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      {prettyDate}
    </p>
    <p class="mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      read time: {readTime}
    </p>

    <div class="markdown mt-10">
      <Content />
      <!-- @ts-expect-error: Custom attributes for Utterances script -->
      <script
        is:inline
        src="https://utteranc.es/client.js"
        repo="mark-mcdermott/mark-mcdermott.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async></script>
    </div>
  </article>
</BlogLayout>
