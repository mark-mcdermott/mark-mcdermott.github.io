---
import BlogLayout from "@/layouts/blogPostLayout.astro";
import "@/styles/markdown.css";
import type { Frontmatter } from "./types";
import type { MarkdownInstance } from "astro";
import fs from "node:fs";
import { getPostWords, readTimeStr } from "@/utils/utils";
import "@fontsource/montserrat/900.css";

const pathname = Astro.url.pathname;
const isActive = pathname === "/";

export async function getStaticPaths() {
  const posts = (await Astro.glob(
    "../content/posts/**/*.mdx"
  )) as MarkdownInstance<Frontmatter>[];

  return posts.map((post) => {
    const fileContent = fs.readFileSync(post.file, { encoding: "utf8" });

    return {
      params: {
        slug: post.frontmatter.href,
      },
      props: {
        post,
        fileContent,
      },
    };
  });
}

const { Content, frontmatter } = Astro.props.post;
const { fileContent } = Astro.props;
const words = getPostWords(fileContent);
const readTime = readTimeStr(words)
---

<BlogLayout
  ><article>
    <h1
      class="text-[40px] font-black leading-[44px] text-[--title] font-['Montserrat']" 
      style={{
        "--myColor1": isActive ? "var(--text)" : "var(--pink)",
        "--myColor2": isActive ? "var(--text)" : "var(--purple)",
        backgroundImage:
          "linear-gradient(45deg, var(--myColor1), var(--myColor2))",
        backgroundClip: "text",
        WebkitBackgroundClip: "text",
        color: "transparent",
        transition: "--myColor1 0.2s ease-out, --myColor2 0.2s ease-in-out",
      }}
    >
      {frontmatter.title}
    </h1>
    <div class="mt-1" style="color: var(--purple)" set:html={frontmatter.spoilerHTML}></div>
    <p class="mb-6 mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      {
        new Date(frontmatter.date).toLocaleDateString("cn", {
          day: "2-digit",
          month: "2-digit",
          year: "numeric",
        })
      }
    </p>

    <p class="mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      read timeï¼š{readTime}
    </p>
    <div class="markdown mt-10">
      <Content />
      <!-- @ts-expect-error: Custom attributes for Utterances script -->
      <script is:inline
        src="https://utteranc.es/client.js"
        repo="mark-mcdermott/mark-mcdermott.github.io"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async
      ></script>
    </div>
  </article></BlogLayout
>
